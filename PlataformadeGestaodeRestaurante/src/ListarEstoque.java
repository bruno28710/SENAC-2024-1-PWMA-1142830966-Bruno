import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author sales
 */
public class ListarEstoque extends javax.swing.JFrame {

    /**
     * Creates new form ListarEstoque
     */
    public ListarEstoque() {
        initComponents();
        listaEstoque();
    }
    
    public void listaEstoque(){
        try {
            // 1- Conexão com o BD
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectar = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurante","root","");
            // 2- Buscar todos os dados que eu quero exibir na tela
            var st = conectar.prepareStatement("SELECT * FROM estoque");
            ResultSet cozinha = st.executeQuery(); // essa linha executa o SELECT
            DefaultTableModel tblModelo = (DefaultTableModel) tblEstoque.getModel();
            tblModelo.setRowCount(0);
            // passa linha por linha até o final da tabela
            while(cozinha.next()){
                String linha[]={
                    cozinha.getString("item"),
                    cozinha.getString("quantidade"),
                    cozinha.getString("departamento"),
                    cozinha.getString("idproduto")
                };
                tblModelo.addRow(linha);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null,"Entre em contato com o suporte e informe o erro:" + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEstoque = new javax.swing.JTable();
        cmbDepartamento = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtItem = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listar Estoque");
        getContentPane().setLayout(null);

        tblEstoque.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        tblEstoque.setForeground(new java.awt.Color(255, 0, 51));
        tblEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantidade", "Departamento", "ID Produto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEstoque);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 70, 490, 230);

        cmbDepartamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Cozinha", "Vendas", " " }));
        cmbDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDepartamentoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDepartamento);
        cmbDepartamento.setBounds(100, 10, 100, 30);

        jLabel3.setText("Departamento:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 20, 90, 20);

        jLabel1.setText("Item:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(250, 20, 27, 16);
        getContentPane().add(txtItem);
        txtItem.setBounds(300, 10, 110, 30);

        btnBuscar.setForeground(new java.awt.Color(153, 0, 0));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar);
        btnBuscar.setBounds(430, 10, 75, 23);

        setSize(new java.awt.Dimension(554, 312));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDepartamentoActionPerformed
        // 0- Obter o cargo da filtragem
        String d;
        d = cmbDepartamento.getSelectedItem().toString();
        if(d.equals("Todos")){
            listaEstoque();
            return;
        }
        try {
            // 1- Conexão com o BD
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectar = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurante","root","");
            // 2- Buscar todos os dados que eu quero exibir na tela
            var st = conectar.prepareStatement("SELECT * FROM estoque WHERE departamento=?");
            st.setString(1, d);
            ResultSet cozinha = st.executeQuery(); // essa linha executa o SELECT
            DefaultTableModel tblModelo = (DefaultTableModel) tblEstoque.getModel();
            tblModelo.setRowCount(0);
            // passa linha por linha até o final da tabela
            while(cozinha.next()){
                String linha[]={
                    cozinha.getString("item"),
                    cozinha.getString("quantidade"),
                    cozinha.getString("departamento")
                };
                tblModelo.addRow(linha);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null,"Entre em contato com o suporte e informe o erro:" + ex.getMessage());
        }
    }//GEN-LAST:event_cmbDepartamentoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        // 0- Obter o cargo da filtragem
        String i;
        i = txtItem.getText();
        try {
            // 1- Conexão com o BD
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conectar = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurante","root","");
            
            // 2- Buscar todos os dados que eu quero exibir na tela
            var st = conectar.prepareStatement("SELECT * FROM estoque WHERE item LIKE ?");
            st.setString(1, "%" + i + "%");
            ResultSet cozinha = st.executeQuery(); // essa linha executa o SELECT
            DefaultTableModel tblModelo = (DefaultTableModel) tblEstoque.getModel();
            tblModelo.setRowCount(0);
            // passa linha por linha até o final da tabela
            while(cozinha.next()){
                String linha[]={
                    cozinha.getString("item"),
                    cozinha.getString("quantidade"),
                    cozinha.getString("departamento")
                };
                tblModelo.addRow(linha);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null,"Entre em contato com o suporte e informe o erro:" + ex.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarEstoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarEstoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JComboBox<String> cmbDepartamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEstoque;
    private javax.swing.JTextField txtItem;
    // End of variables declaration//GEN-END:variables
}
